// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	domain "graph-analyzer/api/graph-property/domain"

	mock "github.com/stretchr/testify/mock"
)

// HasCutEdgeService is an autogenerated mock type for the HasCutEdgeService type
type HasCutEdgeService struct {
	mock.Mock
}

type HasCutEdgeService_Expecter struct {
	mock *mock.Mock
}

func (_m *HasCutEdgeService) EXPECT() *HasCutEdgeService_Expecter {
	return &HasCutEdgeService_Expecter{mock: &_m.Mock}
}

// Invoke provides a mock function with given fields:
func (_m *HasCutEdgeService) Invoke() domain.HasCutEdgeDTO {
	ret := _m.Called()

	var r0 domain.HasCutEdgeDTO
	if rf, ok := ret.Get(0).(func() domain.HasCutEdgeDTO); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.HasCutEdgeDTO)
	}

	return r0
}

// HasCutEdgeService_Invoke_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Invoke'
type HasCutEdgeService_Invoke_Call struct {
	*mock.Call
}

// Invoke is a helper method to define mock.On call
func (_e *HasCutEdgeService_Expecter) Invoke() *HasCutEdgeService_Invoke_Call {
	return &HasCutEdgeService_Invoke_Call{Call: _e.mock.On("Invoke")}
}

func (_c *HasCutEdgeService_Invoke_Call) Run(run func()) *HasCutEdgeService_Invoke_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *HasCutEdgeService_Invoke_Call) Return(_a0 domain.HasCutEdgeDTO) *HasCutEdgeService_Invoke_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *HasCutEdgeService_Invoke_Call) RunAndReturn(run func() domain.HasCutEdgeDTO) *HasCutEdgeService_Invoke_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewHasCutEdgeService interface {
	mock.TestingT
	Cleanup(func())
}

// NewHasCutEdgeService creates a new instance of HasCutEdgeService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHasCutEdgeService(t mockConstructorTestingTNewHasCutEdgeService) *HasCutEdgeService {
	mock := &HasCutEdgeService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
