// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	domain "graph-analyzer/api/graph-property/domain"

	mock "github.com/stretchr/testify/mock"
)

// RobustnessResponder is an autogenerated mock type for the RobustnessResponder type
type RobustnessResponder struct {
	mock.Mock
}

type RobustnessResponder_Expecter struct {
	mock *mock.Mock
}

func (_m *RobustnessResponder) EXPECT() *RobustnessResponder_Expecter {
	return &RobustnessResponder_Expecter{mock: &_m.Mock}
}

// CreateSuccessfulResponse provides a mock function with given fields: dto
func (_m *RobustnessResponder) CreateSuccessfulResponse(dto domain.RobustnessDTO) {
	_m.Called(dto)
}

// RobustnessResponder_CreateSuccessfulResponse_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateSuccessfulResponse'
type RobustnessResponder_CreateSuccessfulResponse_Call struct {
	*mock.Call
}

// CreateSuccessfulResponse is a helper method to define mock.On call
//   - dto domain.RobustnessDTO
func (_e *RobustnessResponder_Expecter) CreateSuccessfulResponse(dto interface{}) *RobustnessResponder_CreateSuccessfulResponse_Call {
	return &RobustnessResponder_CreateSuccessfulResponse_Call{Call: _e.mock.On("CreateSuccessfulResponse", dto)}
}

func (_c *RobustnessResponder_CreateSuccessfulResponse_Call) Run(run func(dto domain.RobustnessDTO)) *RobustnessResponder_CreateSuccessfulResponse_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(domain.RobustnessDTO))
	})
	return _c
}

func (_c *RobustnessResponder_CreateSuccessfulResponse_Call) Return() *RobustnessResponder_CreateSuccessfulResponse_Call {
	_c.Call.Return()
	return _c
}

func (_c *RobustnessResponder_CreateSuccessfulResponse_Call) RunAndReturn(run func(domain.RobustnessDTO)) *RobustnessResponder_CreateSuccessfulResponse_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewRobustnessResponder interface {
	mock.TestingT
	Cleanup(func())
}

// NewRobustnessResponder creates a new instance of RobustnessResponder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRobustnessResponder(t mockConstructorTestingTNewRobustnessResponder) *RobustnessResponder {
	mock := &RobustnessResponder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
