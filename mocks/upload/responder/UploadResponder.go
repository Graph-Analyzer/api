// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	domain "graph-analyzer/api/upload/domain"

	mock "github.com/stretchr/testify/mock"
)

// UploadResponder is an autogenerated mock type for the UploadResponder type
type UploadResponder struct {
	mock.Mock
}

type UploadResponder_Expecter struct {
	mock *mock.Mock
}

func (_m *UploadResponder) EXPECT() *UploadResponder_Expecter {
	return &UploadResponder_Expecter{mock: &_m.Mock}
}

// CreateBadRequestErrorResponse provides a mock function with given fields: error
func (_m *UploadResponder) CreateBadRequestErrorResponse(error string) {
	_m.Called(error)
}

// UploadResponder_CreateBadRequestErrorResponse_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateBadRequestErrorResponse'
type UploadResponder_CreateBadRequestErrorResponse_Call struct {
	*mock.Call
}

// CreateBadRequestErrorResponse is a helper method to define mock.On call
//   - error string
func (_e *UploadResponder_Expecter) CreateBadRequestErrorResponse(error interface{}) *UploadResponder_CreateBadRequestErrorResponse_Call {
	return &UploadResponder_CreateBadRequestErrorResponse_Call{Call: _e.mock.On("CreateBadRequestErrorResponse", error)}
}

func (_c *UploadResponder_CreateBadRequestErrorResponse_Call) Run(run func(error string)) *UploadResponder_CreateBadRequestErrorResponse_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *UploadResponder_CreateBadRequestErrorResponse_Call) Return() *UploadResponder_CreateBadRequestErrorResponse_Call {
	_c.Call.Return()
	return _c
}

func (_c *UploadResponder_CreateBadRequestErrorResponse_Call) RunAndReturn(run func(string)) *UploadResponder_CreateBadRequestErrorResponse_Call {
	_c.Call.Return(run)
	return _c
}

// CreateInternalErrorResponse provides a mock function with given fields: error
func (_m *UploadResponder) CreateInternalErrorResponse(error string) {
	_m.Called(error)
}

// UploadResponder_CreateInternalErrorResponse_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateInternalErrorResponse'
type UploadResponder_CreateInternalErrorResponse_Call struct {
	*mock.Call
}

// CreateInternalErrorResponse is a helper method to define mock.On call
//   - error string
func (_e *UploadResponder_Expecter) CreateInternalErrorResponse(error interface{}) *UploadResponder_CreateInternalErrorResponse_Call {
	return &UploadResponder_CreateInternalErrorResponse_Call{Call: _e.mock.On("CreateInternalErrorResponse", error)}
}

func (_c *UploadResponder_CreateInternalErrorResponse_Call) Run(run func(error string)) *UploadResponder_CreateInternalErrorResponse_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *UploadResponder_CreateInternalErrorResponse_Call) Return() *UploadResponder_CreateInternalErrorResponse_Call {
	_c.Call.Return()
	return _c
}

func (_c *UploadResponder_CreateInternalErrorResponse_Call) RunAndReturn(run func(string)) *UploadResponder_CreateInternalErrorResponse_Call {
	_c.Call.Return(run)
	return _c
}

// CreateSuccessfulResponse provides a mock function with given fields: dto
func (_m *UploadResponder) CreateSuccessfulResponse(dto domain.UploadDTO) {
	_m.Called(dto)
}

// UploadResponder_CreateSuccessfulResponse_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateSuccessfulResponse'
type UploadResponder_CreateSuccessfulResponse_Call struct {
	*mock.Call
}

// CreateSuccessfulResponse is a helper method to define mock.On call
//   - dto domain.UploadDTO
func (_e *UploadResponder_Expecter) CreateSuccessfulResponse(dto interface{}) *UploadResponder_CreateSuccessfulResponse_Call {
	return &UploadResponder_CreateSuccessfulResponse_Call{Call: _e.mock.On("CreateSuccessfulResponse", dto)}
}

func (_c *UploadResponder_CreateSuccessfulResponse_Call) Run(run func(dto domain.UploadDTO)) *UploadResponder_CreateSuccessfulResponse_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(domain.UploadDTO))
	})
	return _c
}

func (_c *UploadResponder_CreateSuccessfulResponse_Call) Return() *UploadResponder_CreateSuccessfulResponse_Call {
	_c.Call.Return()
	return _c
}

func (_c *UploadResponder_CreateSuccessfulResponse_Call) RunAndReturn(run func(domain.UploadDTO)) *UploadResponder_CreateSuccessfulResponse_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewUploadResponder interface {
	mock.TestingT
	Cleanup(func())
}

// NewUploadResponder creates a new instance of UploadResponder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUploadResponder(t mockConstructorTestingTNewUploadResponder) *UploadResponder {
	mock := &UploadResponder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
