basePath: /api
definitions:
  action.QueryRequestModel:
    properties:
      type:
        enum:
        - cut_edges
        - cut_vertices
        example: cut_edges
        maxLength: 30
        minLength: 5
        type: string
    required:
    - type
    type: object
  responder.AverageClusteringCoefficientProjection:
    properties:
      value:
        example: 0.5
        type: number
    required:
    - value
    type: object
  responder.ConnectedProjection:
    properties:
      status:
        example: true
        type: boolean
    required:
    - status
    type: object
  responder.DegreeAssortativityCoefficientProjection:
    properties:
      value:
        example: 0.5
        type: number
    required:
    - value
    type: object
  responder.DegreeCorrelationProjection:
    properties:
      values:
        items:
          $ref: '#/definitions/responder.DegreeCorrelationValueProjection'
        type: array
    required:
    - values
    type: object
  responder.DegreeCorrelationValueProjection:
    properties:
      average:
        example: 1.66
        type: number
      degree:
        example: 4
        type: integer
    required:
    - average
    - degree
    type: object
  responder.DegreeDistributionProjection:
    properties:
      values:
        items:
          $ref: '#/definitions/responder.DegreeDistributionValueProjection'
        type: array
    required:
    - values
    type: object
  responder.DegreeDistributionValueProjection:
    properties:
      amount:
        example: 4
        type: integer
      degree:
        example: 4
        type: integer
    required:
    - amount
    - degree
    type: object
  responder.DensityProjection:
    properties:
      value:
        example: 0.4684
        type: number
    required:
    - value
    type: object
  responder.DiameterProjection:
    properties:
      diameter:
        example: 3
        type: number
      hops:
        example: 5
        type: integer
    required:
    - diameter
    - hops
    type: object
  responder.FullGraphEdgeProjection:
    properties:
      from:
        example: "6"
        type: string
      id:
        example: "12"
        type: string
      to:
        example: "5"
        type: string
      weight:
        example: 1
        type: number
    required:
    - from
    - id
    - to
    - weight
    type: object
  responder.FullGraphNodeProjection:
    properties:
      id:
        example: "6"
        type: string
      label:
        example: XR-6
        type: string
      size:
        example: 5
        type: integer
    required:
    - id
    - label
    - size
    type: object
  responder.FullGraphProjection:
    properties:
      edges:
        items:
          $ref: '#/definitions/responder.FullGraphEdgeProjection'
        type: array
      nodes:
        items:
          $ref: '#/definitions/responder.FullGraphNodeProjection'
        type: array
    required:
    - edges
    - nodes
    type: object
  responder.GeneralInformationProjection:
    properties:
      created_at:
        example: "2022-11-10T12:10:07Z"
        type: string
      edges:
        example: 26
        type: integer
      name:
        example: SA-Network
        type: string
      nodes:
        example: 8
        type: integer
    required:
    - created_at
    - edges
    - name
    - nodes
    type: object
  responder.HasCutEdgeProjection:
    properties:
      status:
        example: true
        type: boolean
    required:
    - status
    type: object
  responder.HasCutVertexProjection:
    properties:
      status:
        example: true
        type: boolean
    required:
    - status
    type: object
  responder.QueryEdgeProjection:
    properties:
      from:
        example: "6"
        type: string
      fromLabel:
        example: XR-6
        type: string
      to:
        example: "5"
        type: string
      toLabel:
        example: XR-5
        type: string
    required:
    - from
    - fromLabel
    - to
    - toLabel
    type: object
  responder.QueryNodeProjection:
    properties:
      id:
        example: "6"
        type: string
      label:
        example: XR-6
        type: string
    required:
    - id
    - label
    type: object
  responder.QueryProjection:
    properties:
      edges:
        items:
          $ref: '#/definitions/responder.QueryEdgeProjection'
        type: array
      nodes:
        items:
          $ref: '#/definitions/responder.QueryNodeProjection'
        type: array
    required:
    - edges
    - nodes
    type: object
  responder.RobustnessProjection:
    properties:
      nodes:
        example: 3
        type: integer
      percentage:
        example: 33.446
        type: number
    required:
    - nodes
    - percentage
    type: object
  responder.UploadErrorProjection:
    properties:
      error:
        example: Filesize to large
        type: string
    type: object
  responder.UploadProjection:
    properties:
      status:
        example: true
        type: boolean
    required:
    - status
    type: object
  responder.UploadStatusProjection:
    properties:
      healthy:
        example: true
        type: boolean
    required:
    - healthy
    type: object
info:
  contact:
    name: API Support
    url: https://gitlab.ost.ch/graph-analyzer/api/-/issues
  description: Analyze a network based on graph properties
  title: graph-analyzer API
  version: 2.0.0
paths:
  /graph-property/average-clustering-coefficient:
    get:
      description: Get average clustering coefficient of the graph. Based on undirected
        and unweighted simple graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.AverageClusteringCoefficientProjection'
        "500":
          description: Internal Server Error
      summary: Get average clustering coefficient
      tags:
      - graph-properties
  /graph-property/connected:
    get:
      description: Get connected status of the graph. Based on undirected and unweighted
        simple graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.ConnectedProjection'
        "500":
          description: Internal Server Error
      summary: Get connected status
      tags:
      - graph-properties
  /graph-property/degree-assortativity-coefficient:
    get:
      description: Get degree assortativity coefficient of the graph. Based on undirected
        and unweighted simple graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.DegreeAssortativityCoefficientProjection'
        "500":
          description: Internal Server Error
      summary: Get degree assortativity coefficient
      tags:
      - graph-properties
  /graph-property/degree-correlation:
    get:
      description: Get degree correlation of the graph. Based on undirected and unweighted
        simple graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.DegreeCorrelationProjection'
        "500":
          description: Internal Server Error
      summary: Get degree correlation
      tags:
      - graph-properties
  /graph-property/degree-distribution:
    get:
      description: Get degree distribution of the graph. Based on undirected and unweighted
        simple graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.DegreeDistributionProjection'
        "500":
          description: Internal Server Error
      summary: Get degree distribution
      tags:
      - graph-properties
  /graph-property/density:
    get:
      description: Get density of the graph. Based on undirected and unweighted simple
        graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.DensityProjection'
        "500":
          description: Internal Server Error
      summary: Get density
      tags:
      - graph-properties
  /graph-property/diameter:
    get:
      description: Get diameter of the graph. Based on directed and weighted multi
        graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.DiameterProjection'
        "500":
          description: Internal Server Error
      summary: Get diameter
      tags:
      - graph-properties
  /graph-property/full-graph:
    get:
      description: Get full network graph (nodes, edges)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.FullGraphProjection'
        "500":
          description: Internal Server Error
      summary: Get full graph
      tags:
      - graph-properties
  /graph-property/general-information:
    get:
      description: Get general information about the graph (number of nodes, number
        of edges, network name, creation date)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.GeneralInformationProjection'
        "500":
          description: Internal Server Error
      summary: Get general information
      tags:
      - graph-properties
  /graph-property/has-cut-edge:
    get:
      description: Get if graph has a cut edge. Based on undirected and unweighted
        simple graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.HasCutEdgeProjection'
        "500":
          description: Internal Server Error
      summary: Get has cut edge
      tags:
      - graph-properties
  /graph-property/has-cut-vertex:
    get:
      description: Get if graph has a cut vertex. Based on undirected and unweighted
        simple graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.HasCutVertexProjection'
        "500":
          description: Internal Server Error
      summary: Get has cut vertex
      tags:
      - graph-properties
  /graph-property/query:
    post:
      consumes:
      - application/json
      description: Get results of query on network graph
      parameters:
      - description: Type
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/action.QueryRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.QueryProjection'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get query results
      tags:
      - graph-properties-query
  /graph-property/robustness:
    get:
      description: Get robustness of the graph for a high-degree attack. Based on
        and unweighted simple graph.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.RobustnessProjection'
        "500":
          description: Internal Server Error
      summary: Get robustness
      tags:
      - graph-properties
  /live:
    get:
      description: Check if system is available (used in k8s)
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Get system liveness
      tags:
      - infrastructure
  /ready:
    get:
      description: Check if system is ready (used in k8s)
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Get system readiness
      tags:
      - infrastructure
  /upload:
    post:
      description: Upload graph-file (gexf)
      parameters:
      - description: GEXF file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.UploadProjection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responder.UploadErrorProjection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responder.UploadErrorProjection'
      summary: Upload gexf
      tags:
      - upload
  /upload-status:
    get:
      description: Get connected status of the data-collector gexf endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.UploadStatusProjection'
      summary: Get data-collector status
      tags:
      - upload
swagger: "2.0"
